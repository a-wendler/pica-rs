var searchIndex = JSON.parse('{\
"pica":{"doc":"","t":[3,13,4,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,3,3,3,3,3,8,3,3,3,6,4,3,3,3,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,3,13,13,13,13,4,13,13,13,4,13,13,13,13,13,13,13,4,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["ByteRecord","Copy","Error","Field","Field","GzipWriter","InvalidField","InvalidFieldMatcher","InvalidMatcher","InvalidOccurrence","InvalidOccurrenceMatcher","InvalidPath","InvalidRecord","InvalidSubfield","InvalidSubfieldMatcher","InvalidSubfieldsMatcher","InvalidTag","Io","Level","Local","Main","Occurrence","Outcome","ParsePathError","ParsePicaError","Path","PicaWriter","PlainWriter","Reader","ReaderBuilder","Result","Selector","Selectors","StringRecord","Subfield","Tag","Utf8Error","Value","WriterBuilder","add","all","all","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","byte_records","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","contains_code","data","decode","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","finish","finish","finish","first","first","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_record","from_bytes","from_bytes","from_bytes","from_path","from_path","from_path_or_stdin","from_path_or_stdout","from_reader","from_str","from_str","from_values","from_writer","get","gzip","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","level","limit","matcher","message","mul","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","occurrence","one","partial_cmp","path","records","reduce","select","serialize","serialize","serialize","skip_invalid","subfields","tag","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","validate","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write","write_byte_record","write_byte_record","write_byte_record","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","And","Any","BooleanOp","Cardinality","Cardinality","Comparison","ComparisonOp","Composite","Composite","EndsWith","Eq","Exists","Exists","FieldMatcher","Ge","Group","Group","Gt","In","Le","Lt","MatcherFlags","Ne","None","Not","Not","OccurrenceMatcher","Or","Pattern","Range","RecordMatcher","Regex","Similar","Singleton","Singleton","Some","Some","StartsWith","SubfieldListMatcher","SubfieldMatcher","Subield","TagMatcher","True","bitand","bitand","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","ignore_case","ignore_case","into","into","into","into","into","into","into","into","into","is_match","is_match","is_match","is_match","is_match","is_match","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","strsim_threshold","strsim_threshold","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","1","2","0","0","1","0","0","0","0","0","1","1","2","2","3","4","0","0","0","0","0","1","1","2","2","0","0","0","0","1","1","1","2","2","2","0","0","1","2","3"],"q":["picapica::Error","","","","","","","","","","","","","pica::Selector","","pica::matcherpica::matcher::FieldMatcher","","","","","pica::matcher::OccurrenceMatcher","","","pica::matcher::RecordMatcher","","","","","","","","","","","pica::matcher::SubfieldListMatcher","","","","","","","","","pica::matcher::SubfieldMatcher","","","","","","","","","","pica::matcher::TagMatcher","","","",""],"d":["A PICA+ record, that may contian invalid UTF-8 data.","","An error that can occur when processing PICA+ data.","A PICA+ field, that may contian invalid UTF-8 data.","","","","","","","","","","","","","","","","","","A PICA+ occurrence.","","","An error that can occur when parsing PICA+ records.","","","A writer to write PICA+ records.","A reader to read PICA+ records.","Configures and builds a PICA+ reader.","A type alias for <code>Result&lt;T, pica::Error&gt;</code>.","","","A PICA+ record, that guarantees valid UTF-8 data.","A PICA+ subfield, that may contian invalid UTF-8 data.","A PICA+ tag.","","","Configures and builds a PICA+ writer.","","Returns the all subfield values for the subfield code","Returns all fields matching the given tag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the inital capacity of an new <code>ByteRecord</code>.","Returns an iterator over all <code>ByteRecord</code>s.","","","","","","","","","Get a reference to the subfieldâ€™s code.","Returns <code>true</code> if the <code>Field</code> contains a <code>Subfield</code> with the â€¦","","","","","","","Dereferences the value","","","Dereferences the value","","","","","","","","","","","","","","","","","","","","","Flushes the underlying writer.","","Returns the first subfield value","Returns the first field matching the given tag","","","","","Format the field in a human-readable format.","","Format the occurrence in a human-readable format.","","","","","","","","","Format the subfield in a human-readable format.","","Format the subfield in a human-readable format.","","","","Format the subfield in a human-readable format.","","Format the tag in a human-readable format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>StringRecord</code> from a <code>ByteRecord</code>","Creates a new <code>Path</code> from a byte vector.","Creates a new ByteRecord from a byte vector.","Creates a new <code>StringRecord</code> from a bytes vector.","Builds a new <code>Reader</code> with the current configuration, that â€¦","Builds a new <code>Writer</code> with the current configuration, that â€¦","Builds a new <code>Reader</code> with the current configuration, that â€¦","Builds a new <code>Writer</code> with the current configuration, that â€¦","Builds a new <code>Reader</code> with the current configuration, that â€¦","","Parse a <code>Path</code> from a string.","","Builds a new <code>Writer</code> with the current configuration, that â€¦","Returns a list of references to all <code>Subfields</code> of the given â€¦","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Level</code> of the tag.","Change the limit of records to read.","","","","","","","","","","","","","Creates a new <code>Field</code>","Creates a PICA+ occurrence from a string slice.","Creates a new path","Create a new <code>ReaderBuilder</code> for reading PICA+ data.","Create a new reader","Creates a new <code>ByteRecord</code>","Creates a new <code>Subfield</code>","Creates a PICA+ tag from a string slice.","Create a new <code>WriterBuilder</code> for writing PICA+ records.","Creates a new writer","","Get a reference to the fieldâ€™s occurrence.","","","Returns all subfield values of a given path.","Returns an iterator over all <code>StringRecord</code>s.","Reduce the record to the given fields.","","","","","Whether to skip invalid records or not.","Get a reference to the fieldâ€™s occurrence.","Get a reference to the fieldâ€™s tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if and only if all subfield values are valid â€¦","Returns <code>true</code> if no fields contains invalid subfield values.","Returns <code>true</code> if the subfield value is valid UTF-8 byte â€¦","Get a reference to the subfieldâ€™s value.","","","","","","","","","","","","","","","","","","","","Write the field into the given writer.","Write the field into the given writer.","Write the subfield into the given writer.","","","","Write a byte record into this writer","","","","","","","","","","","","","","","","","","","Boolean Operators.","","","","Comparison Operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A subfield matcher.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true, if and only if the given field matches â€¦","Returns true, if and only if the given value matches â€¦","Returns true, if and only if the given record matches â€¦","Returns true, if and only if the given subfield list â€¦","Returns true, if and only if the given subfield matches â€¦","Returns true, if and only if the given tag matches against â€¦","","","","","","","Creates a field matcher from a string slice.","","Creates a occurrence matcher from a string slice.","Creates a record matcher from a string slice.","Creates a subfield list matcher from a string slice.","Creates a subfield matcher from a string slice.","Creates a tag matcher from a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,2,0,3,3,3,3,3,3,3,3,3,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,4,5,6,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,12,13,5,8,15,16,5,8,15,16,15,5,9,7,12,4,17,7,5,8,13,6,14,4,16,18,13,18,5,8,8,9,11,6,14,2,15,16,16,1,16,20,18,19,5,6,18,19,3,3,5,5,8,8,9,9,10,10,11,12,13,6,6,14,14,2,4,15,15,16,16,1,17,18,19,7,3,3,3,3,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,14,11,6,14,12,17,12,17,12,5,11,4,17,5,17,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,4,16,12,0,9,4,5,8,9,11,6,14,2,15,16,5,8,11,12,13,6,15,16,17,18,19,5,4,8,6,13,6,6,5,14,15,12,5,5,5,8,15,16,3,5,8,9,10,6,14,15,16,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,5,6,15,15,7,3,5,8,9,10,11,12,13,6,14,2,4,15,16,1,17,18,19,5,6,15,18,19,20,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,40,0,38,39,41,41,42,40,0,41,38,39,41,40,41,41,0,41,37,38,39,0,36,43,37,0,40,41,38,39,37,43,41,0,0,42,0,38,38,39,38,39,36,41,42,44,37,38,39,40,43,36,41,42,44,37,38,39,40,43,36,41,37,36,41,37,44,36,41,42,37,38,39,40,43,36,41,42,44,37,38,39,40,43,36,41,42,44,37,37,38,38,39,39,40,43,43,44,44,36,41,42,44,37,38,39,40,43,42,37,38,39,40,43,42,37,38,39,40,43,42,44,37,38,39,40,43,44,44,36,41,37,36,41,42,44,37,38,39,40,43,36,41,42,44,37,38,39,40,43,36,41,42,44,37,38,39,40,43,36,41,42,44,37,38,39,40,43,45,46,45,46,45,47,48,48,49,50,51,52,53,52,53,52,53,53,53,54,55,56,57,58,57,58,57,58,59,60,61,62,59,61,62,59,61,62,63,64,64,64,64],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["char",15]],["option",4,[["vec",3,[["bstring",3]]]]]],[[["str",15]],["option",4,[["vec",3,[["field",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["byterecordsiter",3]],[[],["field",3]],[[],["occurrence",3]],[[],["subfield",3]],[[],["tag",3]],[[]],[[]],[[]],[[]],[[],["char",15]],[[["char",15]],["bool",15]],null,[[["str",15]],["result",4,[["string",3]]]],[[],["readerbuilder",3]],[[],["outcome",3]],[[],["writerbuilder",3]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["field",3]],["bool",15]],[[["str",15]],["bool",15]],[[["occurrence",3]],["bool",15]],[[["parsepicaerror",3]],["bool",15]],[[["path",3]],["bool",15]],[[["byterecord",3]],["bool",15]],[[["stringrecord",3]],["bool",15]],[[["selector",4]],["bool",15]],[[["subfield",3]],["bool",15]],[[["tag",3]],["bool",15]],[[],["bool",15]],[[["level",4]],["bool",15]],[[],["bool",15]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["char",15]],["option",4,[["bstring",3]]]],[[["str",15]],["option",4,[["field",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["stdresult",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["stdresult",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["utf8error",3]]],[[["parsepicaerror",3]]],[[]],[[["parsepatherror",3]]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["byterecord",3]],["result",6,[["stringrecord",3]]]],[[],["result",4,[["path",3],["parsepatherror",3]]]],[[],["stdresult",4,[["byterecord",3],["parsepicaerror",3]]]],[[["into",8,[["vec",3,[["u8",15]]]]]],["result",6,[["stringrecord",3]]]],[[],["result",6,[["reader",3,[["box",3,[["read",8]]]]]]]],[[["asref",8,[["path",3]]]],["result",6,[["box",3,[["picawriter",8]]]]]],[[["option",4,[["asref",8,[["path",3]]]]]],["result",6,[["reader",3,[["box",3,[["read",8]]]]]]]],[[["option",4,[["asref",8,[["path",3]]]]]],["result",6,[["box",3,[["picawriter",8]]]]]],[[["read",8]],["reader",3,[["read",8]]]],[[["str",15]],["result",6]],[[["str",15]],["result",4]],[[["vec",3,[["bstring",3]]]]],[[["write",8]],["box",3,[["picawriter",8]]]],[[["char",15]],["option",4,[["vec",3,[["subfield",3]]]]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["level",4]],[[["usize",15]]],null,null,[[]],[[["field",3]],["bool",15]],[[["occurrence",3]],["bool",15]],[[["parsepicaerror",3]],["bool",15]],[[["path",3]],["bool",15]],[[["byterecord",3]],["bool",15]],[[["stringrecord",3]],["bool",15]],[[["selector",4]],["bool",15]],[[["subfield",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["tag",3],["option",4,[["occurrence",3]]],["vec",3,[["subfield",3]]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["occurrencematcher",4],["vec",3,[["char",15]]]],["result",6,[["path",3]]]],[[],["readerbuilder",3]],[[["readerbuilder",3]],["reader",3]],[[["vec",3,[["field",3]]]],["byterecord",3]],[[["char",15]],["result",6,[["subfield",3]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[],["writerbuilder",3]],[[["writerbuilder",3]],["plainwriter",3]],[[],["gzipwriter",3]],[[],["option",4,[["occurrence",3]]]],[[]],[[["occurrence",3]],["option",4,[["ordering",4]]]],[[["path",3]],["vec",3,[["bstring",3]]]],[[],["stringrecordsiter",3]],[[]],[[["selector",4],["bool",15]],["outcome",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["bool",15]]],[[],["vec",3]],[[],["tag",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["bstring",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["write",8]],["result",6]],[[["write",8]],["result",6]],[[["write",8]],["result",6]],[[],["result",4,[["usize",15],["error",3]]]],[[],["result",4,[["usize",15],["error",3]]]],[[["byterecord",3]],["result",6]],[[["byterecord",3]],["result",6]],[[["byterecord",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["booleanop",4]],[[],["comparisonop",4]],[[],["occurrencematcher",4]],[[]],[[]],[[]],[[]],[[["booleanop",4]],["bool",15]],[[["comparisonop",4]],["bool",15]],[[["fieldmatcher",4]],["bool",15]],[[["occurrencematcher",4]],["bool",15]],[[["recordmatcher",4]],["bool",15]],[[["subfieldlistmatcher",4]],["bool",15]],[[["subfieldmatcher",4]],["bool",15]],[[["tagmatcher",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["occurrence",3]]],[[]],[[["fieldmatcher",4]]],[[]],[[["subfieldmatcher",4]]],[[]],[[]],[[["tag",3]]],[[]],[[["bool",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["field",3],["matcherflags",3]],["bool",15]],[[["option",4,[["occurrence",3]]]],["bool",15]],[[["byterecord",3],["matcherflags",3]],["bool",15]],[[["matcherflags",3]],["bool",15]],[[["subfield",3],["matcherflags",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["fieldmatcher",4]],["bool",15]],[[["occurrencematcher",4]],["bool",15]],[[["recordmatcher",4]],["bool",15]],[[["subfieldlistmatcher",4]],["bool",15]],[[["subfieldmatcher",4]],["bool",15]],[[["tagmatcher",4]],["bool",15]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["error",4]]]],[[["f64",15]]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Level"],[4,"Selector"],[4,"Error"],[3,"Outcome"],[3,"Field"],[3,"ByteRecord"],[3,"Selectors"],[3,"Occurrence"],[3,"ParsePicaError"],[3,"ParsePathError"],[3,"Path"],[3,"ReaderBuilder"],[3,"Reader"],[3,"StringRecord"],[3,"Subfield"],[3,"Tag"],[3,"WriterBuilder"],[3,"PlainWriter"],[3,"GzipWriter"],[8,"PicaWriter"],[13,"InvalidTag"],[13,"InvalidOccurrence"],[13,"InvalidOccurrenceMatcher"],[13,"InvalidSubfield"],[13,"InvalidSubfieldMatcher"],[13,"InvalidSubfieldsMatcher"],[13,"InvalidField"],[13,"InvalidFieldMatcher"],[13,"InvalidRecord"],[13,"InvalidPath"],[13,"InvalidMatcher"],[13,"Utf8Error"],[13,"Io"],[13,"Field"],[13,"Value"],[4,"BooleanOp"],[4,"OccurrenceMatcher"],[4,"RecordMatcher"],[4,"SubfieldListMatcher"],[4,"SubfieldMatcher"],[4,"ComparisonOp"],[4,"FieldMatcher"],[4,"TagMatcher"],[3,"MatcherFlags"],[13,"Subield"],[13,"Exists"],[13,"Some"],[13,"Range"],[13,"Singleton"],[13,"Group"],[13,"Not"],[13,"Composite"],[13,"Cardinality"],[13,"Singleton"],[13,"Group"],[13,"Not"],[13,"Composite"],[13,"Cardinality"],[13,"Comparison"],[13,"Exists"],[13,"In"],[13,"Regex"],[13,"Some"],[13,"Pattern"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};